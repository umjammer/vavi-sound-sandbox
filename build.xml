<?xml version="1.0" encoding="UTF-8"?>

<!-- ////////////////////////////////////////////////////////////////////// -->
<!-- Copyright (c) 2002 by Naohide Sano, All rights reserved.               -->
<!--                                                                        -->
<!-- Written by Naohide Sano                                                -->
<!--                                                                        -->
<!-- vavi-sound-sandbox                                                     -->
<!--                                                                        -->
<!-- @author	Naohide Sano                                                -->
<!-- @version	0.00	021208	nsano	initial version                     -->
<!--                                                                        -->
<!-- ////////////////////////////////////////////////////////////////////// -->

<project name="vavi-sound-sandbox" default="run" basedir="."
         xmlns:artifact="urn:maven-artifact-ant">

  <path id="maven-ant-tasks.classpath">
    <fileset dir="${user.home}/lib/java/maven-ant-tasks">
      <include name="*.jar" />
    </fileset>
  </path>
  <typedef resource="org/apache/maven/artifact/ant/antlib.xml" uri="urn:maven-artifact-ant"
           classpathref="maven-ant-tasks.classpath" /> 

  <property environment="env"/>
  <property file="local.properties" />

  <xmlproperty file="pom.xml" />

  <!-- Path Definitions -->
  <path id="project.class.path">
    <fileset refid="maven-ant-tasks.dependency.fileset"/>
  </path>

  <!-- clean -->
  <target name="clean" description="Cleaning">
    <delete>
      <fileset dir="${javac.dest}">
        <include name="**/*" />
      </fileset>
      <fileset dir="${javac.dest.test}">
        <include name="**/*" />
      </fileset>
    </delete>
  </target>

  <!-- prepare -->
  <target name="prepare" description="Preparing">
    <artifact:pom file="pom.xml" id="maven.project"/>
    <artifact:dependencies fileSetId="maven-ant-tasks.dependency.fileset">
      <pom refid="maven.project"/>
    </artifact:dependencies>
  </target>

  <!-- javac all vavi -->
  <target name="compile" depends="prepare" description="Compiling">
    <javac debug="on" destdir="${javac.dest}"
           source="${project.build.plugins.plugin.configuration.source}"
           target="${project.build.plugins.plugin.configuration.target}"
           encoding="${project.build.plugins.plugin.configuration.encoding}">
      <classpath refid="project.class.path" />
      <include name="**/*.java" />
      <src path="${javac.source}" />
    </javac>

    <copy todir="${javac.dest}">
      <fileset dir="${javac.resource}">
        <include name="**/*" />
      </fileset>
    </copy>

    <javac debug="on" destdir="${javac.dest.test}"
           source="${project.build.plugins.plugin.configuration.source}"
           target="${project.build.plugins.plugin.configuration.target}"
           encoding="${project.build.plugins.plugin.configuration.encoding}">
      <classpath>
        <path refid="project.class.path" />
        <pathelement location="${javac.dest}" />
      </classpath>
      <include name="**/*.java" />
      <src path="${javac.source.test}" />
    </javac>

    <copy todir="${javac.dest.test}">
      <fileset dir="${javac.resource.test}">
        <include name="**/*" />
      </fileset>
    </copy>
  </target>

  <!-- jar -->
  <target name="package" depends="compile" description="Packaging">
    <jar jarfile="target/${project.artifactId}-${project.version}.jar">
      <fileset dir="${javac.dest}">
        <include name="**/*" />
      </fileset>
    </jar>
  </target>

  <!-- run -->
  <target name="run" depends="compile" description="unknown でコンバート">
    <java classname="unknown.sound.MTMMain" fork="yes">
      <classpath>
        <path refid="project.class.path" />
        <pathelement location="${javac.dest}" />
      </classpath>
    </java>
  </target>

  <!-- backup -->
  <target name="backup" description="backup">
    <tstamp>
      <format property="today.jp" pattern="yyMMdd"/>
    </tstamp>
    <zip zipfile="mld${today.jp}.zip">
      <fileset dir=".">
        <include name="src/**/*.java" />
        <include name="etc/*.MF" />
        <include name="*.xml" />
      </fileset>
    </zip>
  </target>

  <!-- ______________________________________________________________________ -->

  <!-- iLBC -->
  <target name="ilbc" depends="compile" description="iLBC">
    <java classname="vavi.sound.ilbc.Ilbc" fork="yes">
      <classpath refid="project.class.path" />
      <arg value="20" />
      <arg value="${test.150.wave.out}" />
      <arg value="tmp/yyy.ilbc" />
      <arg value="tmp/zzz.pcm" />
    </java>
  </target>

<!-- ______________________________________________________________________ -->

  <!-- vsq -->
  <target name="vsq" depends="compile" description="vsq test">
    <java classname="vavi.sound.vsq.Test" fork="yes">
      <jvmarg value="-Djavax.sound.midi.Sequencer=${test.150.midi.sequencer}"/>
      <classpath refid="project.class.path" />
      <arg value="${test.150.vsq.in}" />
      <arg value="${test.150.vsq.out}" />
    </java>
  </target>

  <!-- vsq2 -->
  <target name="vsq2" depends="compile" description="vsq test">
    <java classname="vavi.sound.vsq.Test2" fork="yes">
      <jvmarg value="-Djavax.sound.midi.Sequencer=${test.150.midi.sequencer}"/>
      <jvmarg value="-Djavax.sound.midi.Synthesizer=${test.150.midi.synthesizer}"/>
      <jvmarg value="-Dcom.sun.media.sound.Soundbank.defaultSoundbank=${test.150.midi.soundbank}"/> <!-- require patched gervill -->
      <jvmarg value="-Xmx512m"/>
      <classpath refid="project.class.path" />
      <arg value="${test.150.vsq.in}" />
    </java>
  </target>

<!-- ______________________________________________________________________ -->

  <!-- compile.jse -->
  <target name="compile.jse" description="compile java sound examples">
    <javac debug="on">
      <classpath refid="project.class.path" />
      <include name="jse/Midi*.java" />
      <src path="src" />
    </javac>
  </target>

  <!-- midi -->
  <target name="midi" depends="compile.jse" description="pure java midi">
    <java classname="jse.MidiPlayer" fork="yes">
      <classpath refid="project.class.path"/>
      <arg line="-d ${test.150.midi.device}" />
      <arg line="-S ${test.150.midi.sequencer}" />
      <arg value="${test.150.midi.in}" />
      <arg value="" />
    </java>
  </target>

  <!-- list -->
  <target name="list" depends="compile.jse" description="list midi devices">
    <java classname="jse.MidiPlayer" fork="yes">
      <classpath refid="project.class.path"/>
      <arg value="-l" />
    </java>
  </target>

<!-- ______________________________________________________________________ -->

  <!-- tc -->
  <target name="tc" depends="compile" description="フォーマットの変換">
    <java classname="Transcode" fork="yes">
      <classpath refid="project.class.path" />
      <arg line="-o out.wav" />                 <!-- output ファイル -->
      <arg line="-a ima4/ms:4000" />            <!-- フォーマット -->
      <arg value="SE02_pcm_4_16_mono.wav" />    <!-- input ファイル -->
    </java>
  </target>

  <!-- wave -->
  <target name="wave" depends="package" description="wave data の抽出">
    <java classname="wave" fork="yes">
      <classpath refid="project.class.path" />
      <arg value="${test.150.wave.in}" />       <!-- input ファイル -->
      <arg value="${test.150.wave.out}" />      <!-- output ファイル -->
    </java>
  </target>

  <!-- tc2 -->
  <target name="tc2" depends="package" description="フォーマットの変換 Test">
    <java classname="Transcoder" fork="yes">
      <classpath refid="project.class.path" />
      <arg value="-o out2.wav" />               <!-- output ファイル -->
      <arg value="-a :8000" />                  <!-- フォーマット -->
      <arg value="SE02.wav" />                  <!-- input ファイル -->
    </java>
  </target>

  <!-- play wave -->
  <target name="play.wave" depends="package" description="play wave">
    <java classname="t150_1" fork="yes">
      <classpath refid="project.class.path" />
      <arg value="out.wav" />
      <arg value="SE02_pcm_11k_16_mono.wav" />
      <arg value="SE02_pcm_8k_16_mono.wav" />
      <arg value="SE02_ogg.wav" />
    </java>
  </target>

  <!-- play g721 -->
  <target name="play.adpcm" depends="package" description="play adpcm">
    <java classname="t150_2" fork="yes">
      <classpath refid="project.class.path" />
      <arg line="g721_lenear_16k.adpcm" />
    </java>
  </target>

  <!-- play pcm -->
  <target name="play.pcm" depends="package" description="play adpcm">
    <java classname="t150_3" fork="yes">
      <!-- jvmarg value="-Xprof" / -->
      <classpath refid="project.class.path" />
      <arg line="lenear_16k_le.pcm" />
      <arg line="lenear_16k_le.pcm.vavi" />
    </java>
  </target>

  <!-- play dir -->
  <target name="play.dir" depends="package" description="play dir">
    <java classname="t150_1" fork="yes" dir="${test.150.play.dir}">
      <classpath refid="project.class.path" />
      <arg value="*.mp3" />
    </java>
  </target>

  <!-- play alac -->
  <target name="alac" depends="package" description="play dir">
    <java classname="Test3" fork="yes">
      <classpath>
        <path refid="project.class.path" />
        <pathelement location="${javac.dest.test}" />
      </classpath>
      <arg value="${test.alac}" />
    </java>
  </target>

<!-- ______________________________________________________________________ -->

  <!-- クラスパスの定義 -->
  <path id="libmfi.class.path">
    <fileset dir="/home/nsano/work/libmfi/lib">
      <include name="*.jar" />
    </fileset>
    <pathelement location="/home/nsano/work/libmfi/build" />
    <fileset dir="../../../lib">
      <include name="tritonus_*.jar" />
      <include name="javalayer.jar" />
      <include name="jo*.jar" />
    </fileset>
    <pathelement location="../.." />
    <pathelement location="src" />
  </path>

  <!-- analyze -->
  <target name="analyze" depends="package" description="play dir">
    <java classname="t150_4" fork="yes">
      <classpath refid="libmfi.class.path" />
      <arg value="${test.150.analyze.dir}" />
    </java>
  </target>

<!-- ______________________________________________________________________ -->

  <path id="jmf.class.path">
    <pathelement location="C:/Program Files/JMF2.1.1e/lib" />
    <path refid="project.class.path" />
  </path>

  <!-- split -->
  <target name="split" depends="package" description="split">
    <java classname="Split" fork="yes">
      <jvmarg value="-Xmx256m" />
      <classpath refid="jmf.class.path" />
      <arg value="${test.150.split.in}" />     <!-- input ファイル -->
      <arg line="-a ${test.150.split.audio}" />
      <arg line="-v ${test.150.split.video}" />
    </java>
  </target>

  <!-- dsr -->
  <target name="dsr" depends="package" description="data source reader">
    <java classname="DataSourceReader" fork="yes">
      <jvmarg value="-Xmx256m" />
      <classpath refid="jmf.class.path" />
      <arg value="-monitor" />
      <arg value="${test.150.dsr.in}" />     <!-- input ファイル -->
    </java>
  </target>

</project>

<!-- -->
