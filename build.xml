<?xml version="1.0" encoding="UTF-8"?>

<!-- ////////////////////////////////////////////////////////////////////// -->
<!-- Copyright (c) 2002 by Naohide Sano, All rights reserved.               -->
<!--                                                                        -->
<!-- Written by Naohide Sano                                                -->
<!--                                                                        -->
<!-- vavi-sound-sandbox                                                     -->
<!--                                                                        -->
<!-- @author Naohide Sano                                                   -->
<!-- @version 0.00 021208 nsano initial version                             -->
<!--                                                                        -->
<!-- ////////////////////////////////////////////////////////////////////// -->

<project name="vavi-sound-sandbox" default="run" basedir="."
         xmlns:artifact="urn:maven-artifact-ant">

  <path id="maven-ant-tasks.classpath">
    <fileset dir="${user.home}/lib/java">
      <include name="maven-ant-tasks*.jar" />
    </fileset>
  </path>
  <typedef resource="org/apache/maven/artifact/ant/antlib.xml" uri="urn:maven-artifact-ant"
           classpathref="maven-ant-tasks.classpath" /> 

  <property environment="env"/>
  <property file="local.properties" />
  <xmlproperty file="pom.xml" />

  <!-- Path Definitions -->
  <path id="project.class.path">
    <pathelement location="${javac.dest.test}" />
    <pathelement location="${javac.dest}" />
    <fileset refid="maven-ant-tasks.dependency.fileset"/>
  </path>

  <!-- prepare -->
  <target name="prepare" description="Preparing">
    <artifact:pom file="pom.xml" id="maven.project"/>
    <artifact:dependencies fileSetId="maven-ant-tasks.dependency.fileset">
      <pom refid="maven.project"/>
    </artifact:dependencies>
    <artifact:mvn pom="pom.xml">
      <arg value="-q" />
      <arg value="clean" />
      <arg value="package" />
      <arg value="-DskipTests=true" />
    </artifact:mvn>
  </target>

  <!-- ______________________________________________________________________ -->

  <!-- run -->
  <target name="run" depends="prepare" description="unknown でコンバート">
    <java classname="unknown.sound.MTMMain" fork="yes">
      <classpath>
        <path refid="project.class.path" />
      </classpath>
    </java>
  </target>

  <!-- iLBC -->
  <target name="ilbc" depends="prepare" description="iLBC">
    <java classname="vavi.sound.ilbc.Ilbc" fork="yes">
      <classpath refid="project.class.path" />
      <arg value="20" />
      <arg value="${test.150.wave.out}" />
      <arg value="tmp/yyy.ilbc" />
      <arg value="tmp/zzz.pcm" />
    </java>
  </target>

  <!-- vsq -->
  <target name="vsq" depends="prepare" description="vsq test">
    <java classname="vavi.sound.vsq.Test" fork="yes">
      <jvmarg value="-Djavax.sound.midi.Sequencer=${test.150.midi.sequencer}"/>
      <classpath refid="project.class.path" />
      <arg value="${test.150.vsq.in}" />
      <arg value="${test.150.vsq.out}" />
    </java>
  </target>

  <!-- vsq2 -->
  <target name="vsq2" depends="prepare" description="vsq test">
    <java classname="vavi.sound.vsq.Test2" fork="yes">
      <jvmarg value="-Djavax.sound.midi.Sequencer=${test.150.midi.sequencer}"/>
      <jvmarg value="-Djavax.sound.midi.Synthesizer=${test.150.midi.synthesizer}"/>
      <jvmarg value="-Dcom.sun.media.sound.Soundbank.defaultSoundbank=${test.150.midi.soundbank}"/> <!-- require patched gervill -->
      <jvmarg value="-Xmx512m"/>
      <classpath refid="project.class.path" />
      <arg value="${test.150.vsq.in}" />
    </java>
  </target>

  <!-- midi -->
  <target name="midi" depends="prepare" description="pure java midi">
    <java classname="jse.MidiPlayer" fork="yes">
      <classpath refid="project.class.path"/>
      <arg line="-d ${test.150.midi.device}" />
      <arg line="-S ${test.150.midi.sequencer}" />
      <arg value="${test.150.midi.in}" />
      <arg value="" />
    </java>
  </target>

  <!-- list -->
  <target name="list" depends="prepare" description="list midi devices">
    <java classname="jse.MidiPlayer" fork="yes">
      <classpath refid="project.class.path"/>
      <arg value="-l" />
    </java>
  </target>

  <!-- tc -->
  <target name="tc" depends="prepare" description="フォーマットの変換">
    <java classname="Transcode" fork="yes">
      <classpath refid="project.class.path" />
      <arg line="-o out.wav" />                 <!-- output ファイル -->
      <arg line="-a ima4/ms:4000" />            <!-- フォーマット -->
      <arg value="SE02_pcm_4_16_mono.wav" />    <!-- input ファイル -->
    </java>
  </target>

  <!-- wave -->
  <target name="wave" depends="prepare" description="wave data の抽出">
    <java classname="wave" fork="yes">
      <classpath refid="project.class.path" />
      <arg value="${test.150.wave.in}" />       <!-- input ファイル -->
      <arg value="${test.150.wave.out}" />      <!-- output ファイル -->
    </java>
  </target>

  <!-- tc2 -->
  <target name="tc2" depends="prepare" description="フォーマットの変換 Test">
    <java classname="Transcoder" fork="yes">
      <classpath refid="project.class.path" />
      <arg value="-o out2.wav" />               <!-- output ファイル -->
      <arg value="-a :8000" />                  <!-- フォーマット -->
      <arg value="SE02.wav" />                  <!-- input ファイル -->
    </java>
  </target>

  <!-- play wave -->
  <target name="play.wave" depends="prepare" description="play wave">
    <java classname="t150_1" fork="yes">
      <classpath refid="project.class.path" />
      <arg value="out.wav" />
      <arg value="SE02_pcm_11k_16_mono.wav" />
      <arg value="SE02_pcm_8k_16_mono.wav" />
      <arg value="SE02_ogg.wav" />
    </java>
  </target>

  <!-- play g721 -->
  <target name="play.adpcm" depends="prepare" description="play adpcm">
    <java classname="t150_2" fork="yes">
      <classpath refid="project.class.path" />
      <arg line="g721_lenear_16k.adpcm" />
    </java>
  </target>

  <!-- play pcm -->
  <target name="play.pcm" depends="prepare" description="play adpcm">
    <java classname="t150_3" fork="yes">
      <!-- jvmarg value="-Xprof" / -->
      <classpath refid="project.class.path" />
      <arg line="lenear_16k_le.pcm" />
      <arg line="lenear_16k_le.pcm.vavi" />
    </java>
  </target>

  <!-- play dir -->
  <target name="play.dir" depends="prepare" description="play dir">
    <java classname="t150_1" fork="yes" dir="${test.150.play.dir}">
      <classpath refid="project.class.path" />
      <arg value="*.mp3" />
    </java>
  </target>

  <!-- play alac -->
  <target name="alac" depends="prepare" description="play dir">
    <java classname="Test3" fork="yes">
      <classpath>
        <path refid="project.class.path" />
        <pathelement location="${javac.dest.test}" />
      </classpath>
      <arg value="${test.alac}" />
    </java>
  </target>

  <!-- analyze -->
  <target name="analyze" depends="prepare" description="play dir">
    <java classname="t150_4" fork="yes">
      <classpath refid="libmfi.class.path" />
      <arg value="${test.150.analyze.dir}" />
    </java>
  </target>

  <!-- split -->
  <target name="split" depends="prepare" description="split">
    <java classname="Split" fork="yes">
      <jvmarg value="-Xmx256m" />
      <classpath refid="project.class.path" />
      <arg value="${test.150.split.in}" />     <!-- input ファイル -->
      <arg line="-a ${test.150.split.audio}" />
      <arg line="-v ${test.150.split.video}" />
    </java>
  </target>

  <!-- dsr -->
  <target name="dsr" depends="prepare" description="data source reader">
    <java classname="DataSourceReader" fork="yes">
      <jvmarg value="-Xmx256m" />
      <classpath refid="project.class.path" />
      <arg value="-monitor" />
      <arg value="${test.150.dsr.in}" />     <!-- input ファイル -->
    </java>
  </target>

</project>

<!-- -->
